
> web@0.1.0 lint C:\Users\lucci\OneDrive\Desktop\ProyectoWeb-somosNMD-v-Final\apps\web
> eslint "src/**/*.{ts,tsx,js,jsx}"


C:\Users\lucci\OneDrive\Desktop\ProyectoWeb-somosNMD-v-Final\apps\web\src\components\layout\PageShell.tsx
  39:5  error  Error: Calling setState synchronously within an effect can trigger cascading renders

Effects are intended to synchronize state between React and external systems such as manually updating the DOM, state management libraries, or other platform APIs. In general, the body of an effect should do one or both of the following:
* Update external systems with the latest state from React.
* Subscribe for updates from some external system, calling setState in a callback function when external state changes.

Calling setState synchronously within an effect body causes cascading renders that can hurt performance, and is not recommended. (https://react.dev/learn/you-might-not-need-an-effect).

C:\Users\lucci\OneDrive\Desktop\ProyectoWeb-somosNMD-v-Final\apps\web\src\components\layout\PageShell.tsx:39:5
  37 |     });
  38 |
> 39 |     setLenis(lenisInstance);
     |     ^^^^^^^^ Avoid calling setState() directly within an effect
  40 |
  41 |     let animationFrameId: number;
  42 |     let currentScroll = 0;  react-hooks/set-state-in-effect

C:\Users\lucci\OneDrive\Desktop\ProyectoWeb-somosNMD-v-Final\apps\web\src\components\sections\ArtistOverlay.tsx
  117:13  warning  Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` or a custom image loader to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element  @next/next/no-img-element

C:\Users\lucci\OneDrive\Desktop\ProyectoWeb-somosNMD-v-Final\apps\web\src\components\sections\HeroSection.tsx
  119:5  warning  React Hook useCallback has an unnecessary dependency: 'prefersReducedMotion'. Either exclude it or remove the dependency array  react-hooks/exhaustive-deps

C:\Users\lucci\OneDrive\Desktop\ProyectoWeb-somosNMD-v-Final\apps\web\src\components\sections\MusicSection.tsx
  64:9  warning  Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` or a custom image loader to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element  @next/next/no-img-element

C:\Users\lucci\OneDrive\Desktop\ProyectoWeb-somosNMD-v-Final\apps\web\src\components\system\ThreeDLoader.tsx
  5:19  warning  'PerspectiveCamera' is defined but never used  @typescript-eslint/no-unused-vars

C:\Users\lucci\OneDrive\Desktop\ProyectoWeb-somosNMD-v-Final\apps\web\src\lib\useWebGLSupport.ts
  20:7   error    Error: Calling setState synchronously within an effect can trigger cascading renders

Effects are intended to synchronize state between React and external systems such as manually updating the DOM, state management libraries, or other platform APIs. In general, the body of an effect should do one or both of the following:
* Update external systems with the latest state from React.
* Subscribe for updates from some external system, calling setState in a callback function when external state changes.

Calling setState synchronously within an effect body causes cascading renders that can hurt performance, and is not recommended. (https://react.dev/learn/you-might-not-need-an-effect).

C:\Users\lucci\OneDrive\Desktop\ProyectoWeb-somosNMD-v-Final\apps\web\src\lib\useWebGLSupport.ts:20:7
  18 |         canvas.getContext("webgl") || canvas.getContext("experimental-webgl");
  19 |
> 20 |       setIsSupported(!!context);
     |       ^^^^^^^^^^^^^^ Avoid calling setState() directly within an effect
  21 |     } catch (e) {
  22 |       setIsSupported(false);
  23 |     }  react-hooks/set-state-in-effect
  21:14  warning  'e' is defined but never used                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           @typescript-eslint/no-unused-vars

✖ 7 problems (2 errors, 5 warnings)

 ELIFECYCLE  Command failed with exit code 1.
